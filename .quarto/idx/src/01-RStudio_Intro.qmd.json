{"title":"Intro to R, RStudio, and R Markdown","markdown":{"yaml":{"title":"Intro to R, RStudio, and R Markdown","eval":true},"headingText":"list all the package names","containsRefs":false,"markdown":"\n\n```{r}\n#| results: 'hide'\n#| include: false\n\nrm(list = ls())\n```\n\n```{r List of Used Packages}\n#| include: false\n#| echo: true\n#| error: true\n\npackages = c(\"tidyverse\", \"ggplot2\", \"ggmap\", \"tint\", \"here\")\n```\n\n```{r Load Packages}\n#| include: false\n#| echo: true\n#| error: true\n\ninstall.packages(setdiff(packages, rownames(installed.packages())))\nlapply(packages, require, character.only = TRUE)\n```\n\n## Learning Goals\n\n-   Download and install the necessary tools (R, RStudio)\n-   Develop comfort in navigating the tools in RStudio\n-   Develop comfort in writing and knitting a R Markdown (or a new Quarto) file\n-   Identify the characteristics of tidy data\n-   Use R code: as a calculator and to explore tidy data\n\n## Getting Started in RStudio\n\nAs you might guess from the name, \"Data Science\" requires *data*. Working with modern (large, messy) data sets requires statistical software. We'll exclusively use **RStudio**. Why?\n\n-   it's free\\\n-   it's open source (the code is free & anybody can contribute to it)\n-   it has a huge online community (which is helpful for when you get stuck)\\\n-   it's one of the industry standards\\\n-   it can be used to create *reproducible* and lovely documents (In fact, the course materials that you're currently reading were constructed entirely within RStudio!)\n\n### Download R & RStudio\n\nTo get started, take the following two steps *in the given order*. Even if you already have R/RStudio, make sure to update to the most recent versions.\n\n1.  Download and install the R statistical software at <https://mirror.las.iastate.edu/CRAN/>\\\n\n-   Mac: Check to see if you have an Intel or Apple Silicon Processor Chip (Apple logo \\> About this Mac). This will impact the version you download.\n\n2.  Download and install the FREE version of RStudio at <https://posit.co/download/rstudio-desktop/>\n\n-   Mac: Once you download the dmg file and click on it, drag the RStudio icon to applications and then open Finder and click the eject icon next to the RStudio temporary drive under Locations.\n\nIf you are having issues with downloading, log on to <https://rstudio.macalester.edu/> (use Mac credentials) to use the RStudio server.\n\nWhat's the difference between R and RStudio? Mainly, RStudio requires R -- thus it does everything R does *and more*. We will be using RStudio exclusively.\n\n### A quick tour of RStudio\n\nOpen RStudio! You should see four panes, each serving a different purpose:\n\n```{r fig-main,echo=FALSE,fig.cap=\"RStudio Interface\"}\nknitr::include_graphics(here(\"images\", \"rstudio-panes-labeled.jpeg\"))\n```\n\nThis short [video tour of RStudio](http://www.youtube.com/embed/JfIo2Ua_oqQ/) summarizes some basic features of the *console*.\n\n```{name=\"Warm Up\"}\nUse RStudio as a simple calculator to do the following:\n  \n  1) Perform a simple calculation: calculate `90/3`.\n  2) RStudio has built-in *functions* to which we supply the necessary *arguments*:  `function(arguments)`.  Use the built-in function `sqrt` to calculate the square root of 25.\n  3) Use the built-in function `rep` to repeat the number \"5\" eight times. (Type `?rep` in the console and press Return. Check out the Help documentation for examples at the bottom.)\n  4) Use the `seq` function to create the vector `(0, 3, 6, 9, 12)`.  (Type `?seq` in the console and press Return.)\n  5) Create a new vector by concatenating three repetitions of the vector from the previous part. (Type `?c` in the console and press Return.)\n```\n\nSolution\n\n```{r, collapse=TRUE}\n90/3 \n\nsqrt(25)\n\nrep(5, times = 8)\n\nseq(0, 12, by = 3)\n\nrep(seq(0, 12, by = 3), times =  3)\n\nrep(seq(0, 12, by = 3), each = 3) #notice the difference between the named input of times and each\n```\n\n```{name=\"Assigning Values to Variables\", label=\"assignment\"}\nWe often want to store our output for later use (why?).  The basic idea in R:    \n  \n    `name <- output`\n  \nCopy and paste the following code into the console, line by line.  NOTE:  RStudio ignores any content after the `#`.  Thus we use this to make 'comments' and organize our code.    \n```\n\n```{r eval=FALSE}\n#type square_3\nsquare_3\n    \n#calculate 3 squared\n3^2    \n    \n#store this as \"square_3\"\nsquare_3 <- 3^2    \n    \n#type square_3 again!\nsquare_3\n    \n#do some math with square_3\nsquare_3 + 2\n```\n\n### Data\n\nNot only does \"Data Science\" require statistical software, it requires *DATA*! Consider the Google definition:\n\n```{r echo=FALSE,fig.cap=\"A datum.\"}\nknitr::include_graphics(\"../images/datum.png\")\n```\n\nWith this definition in mind, which of the following are examples of data?\n\n-   tables\n\n```{r echo=FALSE, warning=FALSE, message=FALSE}\nlibrary(mosaic)\ndata(Galton)\nhead(Galton)\n```\n\n-   [photo](https://www.google.com/search?hl=en&biw=1439&bih=656&tbm=isch&sa=1&q=messy+college+dorm+rooms&oq=messy+college+dorm+rooms&gs_l=psy-ab.3...20720.21922.0.22183.6.6.0.0.0.0.143.552.4j2.6.0....0...1.1.64.psy-ab..1.1.142...0i13k1.uaj5gYQ4t50)\n\n-   [video](https://www.youtube.com/watch?v=wMm7VdH05jY)\n\n-   [text / tweets](https://twitter.com/data4blacklives?lang=en)\n\nWe'll mostly work with data that look like this:\n\n```{r echo=FALSE, warning=FALSE, message=FALSE}\nlibrary(mosaic)\ndata(Galton)\nhead(Galton)\n```\n\nThis isn't as restrictive as it seems. We can convert the above signals: photos, videos, and text to a data table format!\n\n### Tidy Data\n\n**Example:** After a scandal among FIFA officials, fivethirtyeight.com posted an analysis of FIFA viewership, [\"How to Break FIFA\"](https://fivethirtyeight.com/features/how-to-break-fifa/). Here's a snapshot of the data used in this article:\n\n```{r echo=FALSE}\nsuppressPackageStartupMessages(library(fivethirtyeight))\ndata(\"fifa_audience\")\nsuppressPackageStartupMessages(library(knitr))\nkable(head(fifa_audience,10))\nfifa <- fifa_audience\n```\n\nThe data table above is in *tidy* format. *Tidy* data tables have three key features:\n\n1.  Each row represents a **unit of observation** (also referred to as a case).\\\n2.  Each column represents a **variable** (ie. an attribute of the cases that can vary from case to case). Each variable is one of two types:\\\n\n-   **quantitative** = numerical/numbers with units\\\n-   **categorical** = discrete possibilities/categories\\\n\n3.  Each entry contains a single data value; no analysis, summaries, footnotes, comments, etc., and only one value per cell\n\n![Tidy Data: Art by Allison Horst](../images/tidydata_1.jpg)\n\n```{name=\"Units of Observation and Variables\"}\nConsider the following in a group:   \n```\n\na.  What are the units of observation in the FIFA data?\\\nb.  What are the variables? Which are quantitative? Which are categorical?\\\nc.  Are these *tidy* data?\n\nSolution\n\na.  A FIFA member country\nb.  country name, soccer or football confederation, country's share of global population (percentage), country's share of global world cup TV Audience (percentage), country's GDP-weighted audience share (percentage)\nc.  Yes\n\n\\\n\n```{name=\"Tidy vs. Untidy\"}\nCheck out the following data.  Explain to each other why they are untidy and how we can tidy them.    \n  \n  a. Data 1: FIFA    \n    \n              country  confederation  population share    tv_share\n        ------------- -------------- ----------------- ----------- ------------------\n        United States       CONCACAF     i don't know*       4.3%  *look up later      \n                 Japan           AFC               1.9       4.9%\n                 China           AFC              19.5      14.8%    \n                                                        total=24%           \n  \n  b. Data 2: Gapminder life expectancies by country    \n        \n                          country  1952  1957  1962\n        ------------ ------------ ----- ----- -----\n                Asia  Afghanistan  28.8  30.3  32.0\n                          Bahrain  50.9  53.8  56.9    \n              Africa      Algeria  43.0  45.7  48.3    \n\n```\n\nSolution\n\na.  There are notes such as \"I don't know\" and \"look up later\" in columns with numeric values; the last row with the total is a summary. We could remove the text notes, replace it with the value if known, and remove the last row with the total summary.\nb.  The first column does not have a row name. It should be continent. Additionally, Bahrain needs a value for the continent.The column names '1952', '1957' and '1962' are values not variables. The table should be 'pivoted' (more information on this coming soon!), so that there is an additional column named 'year' and each country has three observations (rows) associated with it (one for each year).\n\n### Data Basics in RStudio\n\nFor now, we'll focus on *tidy* data. In a couple of weeks, you'll learn how to \"clean data\" and turn untidy data into tidy data.\n\n```{name=\"Importing Package Data\"}\nThe first step to working with data in RStudio is getting it in there!  How we do this depends on its format (eg: Excel spreadsheet, csv file, txt file) and storage locations (eg: online, within Wiki, desktop).  \n\nLuckily for us, the `fifa_audience` data are stored in the `fivethirtyeight` RStudio package. Copy and paste the following code into the Console and press Enter.\n```\n\n```{r eval=FALSE}\n#download the data and information in the fivethirtyeight package (we only need to do this once)\ninstall.packages('fivethirtyeight')\n\n#load the fivethirtyeight package\nlibrary(fivethirtyeight)\n    \n#load the fifa data\ndata(\"fifa_audience\")\n    \n#store this under a shorter, easier name\nfifa <- fifa_audience\n```\n\n```{name=\"Examining Data Structures\"}\nBefore we can analyze our data, we must understand its structure.  Try out the following functions (copy and paste into the Console).  For each, make a note that describes its action.  \n```\n\n```{r eval=FALSE}\n#(what does View do?)\nView(fifa)  \n\n#(what does head do?)\nhead(fifa)  \n\n#(what does dim do?)\ndim(fifa)           \n\n#(what does names do?)\nnames(fifa)         \n```\n\nSolution\n\n```{r collapse=TRUE}\n#View() opens up a new tab with a spreadsheet preview of the data to visually explore the data. It is commented out in the Rmarkdown/Quarto file because this is an interactive feature\n#View(fifa)  \n\n#head() gives the first 6 (default number) rows of a data set\nhead(fifa)  \n\n#dim() gives the number of rows and number of columns\ndim(fifa)           \n\n#names() gives the names of the columns/variables\nnames(fifa)   \n```\n\n```{name=\"Codebooks\"}\nData are also only useful if we know what they measure!  The `fifa` data table is *tidy*; it doesn't have any helpful notes in the data itself.\n```\n\nRather, information about the data is stored in a separate *codebook*. Codebooks can be stored in many ways (eg: Google docs, word docs, etc). Here the authors have made their codebook available in RStudio (under the original `fifa_audience` name). Check it out (run the following code in the console):\n\n```{r eval=FALSE}\n?fifa_audience\n```\n\na.  What does `population_share` measure?\nb.  What are the units of `population_share`?\n\nSolution\n\na.  Country's share of global population\nb.  Percentage between 0 and 100\n\n```{name=\"Examining a Single Variable\"}\nConsider the following:\n```\n\na.  We might want to access and focus on a single variable. To this end, we can use the `$` notation (see below). What are the values of `tv_audience_share`? Of `confederation`? Is it easy to figure out?\n\n```{r eval=FALSE}\nfifa$tv_audience_share\nfifa$confederation\n```\n\nSolution\n\na.  The values of `tv_audience_share` are numerical values between 0 and 7.1. By scanning through the long list, it looks like the values of `confederation` are words (a string of alphabetical characters): OFC, CAF, AFC, UEFA, CONCACAF, CONMEBOL.\n\nIt's important to understand the format/class of each variable (quantitative, categorical, date, etc) in both its meaning and its structure within RStudio:\n\n```{r eval=FALSE}\nclass(fifa$tv_audience_share)\nclass(fifa$confederation)\n```\n\nb.  If a variable is categorical (in `factor` format), we can determine its `levels` / category labels. What are the value of `confederation`?\n\n```{r eval=FALSE}\nlevels(fifa$confederation) #it is in character format\nlevels(factor(fifa$confederation)) #we can convert to factor format\n```\n\nSolution\n\nb.  The values of `confederation` are words, also known as strings of characters in computing languages (indicated by the quotes around them): \"AFC\", \"CAF\", \"CONCACAF\", \"CONMEBOL\", \"OFC\", \"UEFA\".\n\n## R Markdown/Quarto and Reproducible Research\n\n> **Reproducible research** is the idea that data analyses, and more generally, scientific claims, are published with their data and software code so that others may verify the findings and build upon them. - [Reproducible Research, Coursera](https://www.coursera.org/learn/reproducible-research)\n\nUseful Resources:\n\n1.  [R Markdown Quick Tour](http://rmarkdown.rstudio.com/authoring_quick_tour.html)\\\n2.  [R Markdown Cheatsheet](https://github.com/rstudio/cheatsheets/raw/main/rmarkdown-2.0.pdf)\n3.  [R Markdown Reference Guide](https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf)\n4.  [Quarto Get Started Guide](https://quarto.org/docs/get-started/hello/rstudio.html)\n\nResearch often makes claims that are difficult to verify. A recent [study of published psychology articles](http://science.sciencemag.org/content/349/6251/aac4716) found that less than half of published claims could be reproduced. One of the most common reasons claims cannot be reproduced is confusion about data analysis. It may be unclear exactly how data was prepared and analyzed, or there may be a mistake in the analysis.\n\nIn this course we will use an innovative format called R Markdown that dramatically increases the transparency of data analysis. R Markdown interleaves data, R code, graphs, tables, and text, packaging them into an easily publishable format. Quarto is the update version of R Markdown that allows you to incorporate code from many programming languages and is more general than RStudio. You can choose to work in either format.\n\nTo use R Markdown, you will write an R Markdown formatted file in RStudio and then ask RStudio to **knit** it into an HTML document (or occasionally a PDF or MS Word document). If you work in a Quarto document, you press the **render** button to turn it into an HTML document.\n\n```{name=\"Deduce the R Markdown Format\"}\nLook at this [Sample RMarkdown](http://www.statpower.net/Content/310/R%20Stuff/SampleMarkdown.Rmd) and the [HTML webpage](http://www.statpower.net/Content/310/R%20Stuff/SampleMarkdown.html) it creates. Consider the following and discuss:\n    \na) How are bullets, italics, and section headers represented in the R Markdown file?\nb) How does R code appear in the R Markdown file?\nc) In the HTML webpage, do you see the R code, the output of the R code, or both?\n```\n\nSolution\n\n``` {collapse=\"TRUE\"}\nBullets are represented with * and +\nItalics are represented with * before and after a word or phrase\nSection headers are represented with #\n\nR code chunks are between 3 tick marks at the beginning and end; it is R code if there is an r in curly braces\n  \nIf echo=FALSE in curly braces, the code is not shown. Otherwise, both code and output are shown by default.\n```\n\n\nNow take a look at the [R Markdown cheatsheet](https://github.com/rstudio/cheatsheets/raw/main/rmarkdown-2.0.pdf). Look up the R Markdown features from the previous question on the cheatsheet. There's a great deal more information there.\n\n## Practice\n\nComplete the following. If you get stuck along the way, refer to the R Markdown cheatsheet linked above, search the web for answers, and/or ask for help!\n\n```{name=\"Your First R Markdown File\"}\nCreate a new R Markdown (or a Quarto document) about your favorite food.    \n\na. Create a new file in RStudio (File -> New File -> R Markdown or Quarto Document) with a Title of `First_Markdown` [unclick the visual editor button]. Save it to a new folder on your Desktop called `COMP_STAT_112`; within that new folder, create another new folder called `Assignment_01`.  \nb. Make sure you can compile/render (Knit/Render) the Markdown/Quarto into a webpage (html file).  \nc. Add a new line between `title` and `output` that reads: `author: Your Name`.\nd. Delete everything from `## RMarkdown` or `## Quarto` and below. Create a new section by typing `## Favorite Food`.\ne. Write a very brief essay about your favorite food. Make sure to include:    \n  * A picture from the web    \n  * A bullet list    \n  * A numbered list  \nf. Compile (Knit/Render) the document into an html file [which appears in the folder `Assignment_01` you created] and make sure it looks like you want it to.\n```\n\n```{name=\"New Data!\"}\nThere's a data set named `comic_characters` in the `fivethirtyeightdata` package.\n```\n\nInstall the package by running the following in the console:\n\n```         \ninstall.packages('fivethirtyeightdata', repos = 'https://fivethirtyeightdata.github.io/drat/', type = 'source')\n```\n\nCheck out the codebook (hint: use ?) to understand what these data measure.\n\nAdd a second section to your RMarkdown file that you've created (with `##`), and then use code chunks and R commands to perform/answer the following tasks/questions:\n\na.  Load the `comic_characters` data.\\\nb.  What are the units of observation? How many observations are there?\\\nc.  In a new code chunk, print out the first 12 rows of the data set.\nd.  Get a list of all variable names.\\\ne.  What's the class of the `date` variable?\\\nf.  List all of the unique entries in the `gsm` variable (no need to include NA).\ng.  Compile the document into an html file.\n\n## Appendix: R Functions\n\n### R as a calculator\n\n| Function/Operator |      Action       |    Example |\n|-------------------|:-----------------:|-----------:|\n| `/`               |     Division      |    `90/30` |\n| `*`               |  Multiplication   |      `2*5` |\n| `+`               |     Addition      |      `1+1` |\n| `-`               |    Subtraction    |      `1-1` |\n| `^`               | Exponent/Power to |      `3^2` |\n| `sqrt(x)`         |    Square root    | `sqrt(25)` |\n\n### R Basics\n\n| Function/Operator                 |                                    Action                                    |                                       Example |\n|------------------|:--------------------------------:|--------------------:|\n| `install.packages('packagename')` |         Download a R package (function, data, etc.) from repository          |         `install.packages('fivethirtyeight')` |\n| `library(packagename)`            |                        Access a downloaded R package                         |                    `library(fivethirtyeight)` |\n| `?function_object_name`           |           Opens the help/documentation for the function or object            |                                        `?seq` |\n| `rep(x, times, each)`             |                             Repeat x a \\# times                              |                                    `rep(5,8)` |\n| `seq(from, to, by)`               |                             Sequence generation                              |                          `seq(0, 12, by = 2)` |\n| `name <- value_output`            |                       Assign value or output to a name                       |                            `squared_3 <- 3^2` |\n| `View(x)`                         |                      Open spreadsheet viewer of dataset                      |                         `View(fifa_audience)` |\n| `head(x)`                         |                     Print the first 6 rows of a dataset                      |                         `head(fifa_audience)` |\n| `dim(x)`                          |        Print the dimensions (number of rows and columns) of a dataset        |                          `dim(fifa_audience)` |\n| `names(x)`                        |                Print the names of the variables in a dataset                 |                        `names(fifa_audience)` |\n| `$`                               |         Used to access one variable in a data set based on its name          |                 `fifa_audience$confederation` |\n| `class(x)`                        |                   Print the class types argument or input                    |          `class(fifa_audience$confederation)` |\n| `factor(x)`                       | Converts the argument or input to a factor class type (categorical variable) |         `factor(fifa_audience$confederation)` |\n| `levels(x)`                       |                   Prints the unique categories of a factor                   | `levels(factor(fifa_audience$confederation))` |\n","srcMarkdownNoYaml":"\n\n```{r}\n#| results: 'hide'\n#| include: false\n\nrm(list = ls())\n```\n\n```{r List of Used Packages}\n#| include: false\n#| echo: true\n#| error: true\n\n# list all the package names\npackages = c(\"tidyverse\", \"ggplot2\", \"ggmap\", \"tint\", \"here\")\n```\n\n```{r Load Packages}\n#| include: false\n#| echo: true\n#| error: true\n\ninstall.packages(setdiff(packages, rownames(installed.packages())))\nlapply(packages, require, character.only = TRUE)\n```\n\n## Learning Goals\n\n-   Download and install the necessary tools (R, RStudio)\n-   Develop comfort in navigating the tools in RStudio\n-   Develop comfort in writing and knitting a R Markdown (or a new Quarto) file\n-   Identify the characteristics of tidy data\n-   Use R code: as a calculator and to explore tidy data\n\n## Getting Started in RStudio\n\nAs you might guess from the name, \"Data Science\" requires *data*. Working with modern (large, messy) data sets requires statistical software. We'll exclusively use **RStudio**. Why?\n\n-   it's free\\\n-   it's open source (the code is free & anybody can contribute to it)\n-   it has a huge online community (which is helpful for when you get stuck)\\\n-   it's one of the industry standards\\\n-   it can be used to create *reproducible* and lovely documents (In fact, the course materials that you're currently reading were constructed entirely within RStudio!)\n\n### Download R & RStudio\n\nTo get started, take the following two steps *in the given order*. Even if you already have R/RStudio, make sure to update to the most recent versions.\n\n1.  Download and install the R statistical software at <https://mirror.las.iastate.edu/CRAN/>\\\n\n-   Mac: Check to see if you have an Intel or Apple Silicon Processor Chip (Apple logo \\> About this Mac). This will impact the version you download.\n\n2.  Download and install the FREE version of RStudio at <https://posit.co/download/rstudio-desktop/>\n\n-   Mac: Once you download the dmg file and click on it, drag the RStudio icon to applications and then open Finder and click the eject icon next to the RStudio temporary drive under Locations.\n\nIf you are having issues with downloading, log on to <https://rstudio.macalester.edu/> (use Mac credentials) to use the RStudio server.\n\nWhat's the difference between R and RStudio? Mainly, RStudio requires R -- thus it does everything R does *and more*. We will be using RStudio exclusively.\n\n### A quick tour of RStudio\n\nOpen RStudio! You should see four panes, each serving a different purpose:\n\n```{r fig-main,echo=FALSE,fig.cap=\"RStudio Interface\"}\nknitr::include_graphics(here(\"images\", \"rstudio-panes-labeled.jpeg\"))\n```\n\nThis short [video tour of RStudio](http://www.youtube.com/embed/JfIo2Ua_oqQ/) summarizes some basic features of the *console*.\n\n```{name=\"Warm Up\"}\nUse RStudio as a simple calculator to do the following:\n  \n  1) Perform a simple calculation: calculate `90/3`.\n  2) RStudio has built-in *functions* to which we supply the necessary *arguments*:  `function(arguments)`.  Use the built-in function `sqrt` to calculate the square root of 25.\n  3) Use the built-in function `rep` to repeat the number \"5\" eight times. (Type `?rep` in the console and press Return. Check out the Help documentation for examples at the bottom.)\n  4) Use the `seq` function to create the vector `(0, 3, 6, 9, 12)`.  (Type `?seq` in the console and press Return.)\n  5) Create a new vector by concatenating three repetitions of the vector from the previous part. (Type `?c` in the console and press Return.)\n```\n\nSolution\n\n```{r, collapse=TRUE}\n90/3 \n\nsqrt(25)\n\nrep(5, times = 8)\n\nseq(0, 12, by = 3)\n\nrep(seq(0, 12, by = 3), times =  3)\n\nrep(seq(0, 12, by = 3), each = 3) #notice the difference between the named input of times and each\n```\n\n```{name=\"Assigning Values to Variables\", label=\"assignment\"}\nWe often want to store our output for later use (why?).  The basic idea in R:    \n  \n    `name <- output`\n  \nCopy and paste the following code into the console, line by line.  NOTE:  RStudio ignores any content after the `#`.  Thus we use this to make 'comments' and organize our code.    \n```\n\n```{r eval=FALSE}\n#type square_3\nsquare_3\n    \n#calculate 3 squared\n3^2    \n    \n#store this as \"square_3\"\nsquare_3 <- 3^2    \n    \n#type square_3 again!\nsquare_3\n    \n#do some math with square_3\nsquare_3 + 2\n```\n\n### Data\n\nNot only does \"Data Science\" require statistical software, it requires *DATA*! Consider the Google definition:\n\n```{r echo=FALSE,fig.cap=\"A datum.\"}\nknitr::include_graphics(\"../images/datum.png\")\n```\n\nWith this definition in mind, which of the following are examples of data?\n\n-   tables\n\n```{r echo=FALSE, warning=FALSE, message=FALSE}\nlibrary(mosaic)\ndata(Galton)\nhead(Galton)\n```\n\n-   [photo](https://www.google.com/search?hl=en&biw=1439&bih=656&tbm=isch&sa=1&q=messy+college+dorm+rooms&oq=messy+college+dorm+rooms&gs_l=psy-ab.3...20720.21922.0.22183.6.6.0.0.0.0.143.552.4j2.6.0....0...1.1.64.psy-ab..1.1.142...0i13k1.uaj5gYQ4t50)\n\n-   [video](https://www.youtube.com/watch?v=wMm7VdH05jY)\n\n-   [text / tweets](https://twitter.com/data4blacklives?lang=en)\n\nWe'll mostly work with data that look like this:\n\n```{r echo=FALSE, warning=FALSE, message=FALSE}\nlibrary(mosaic)\ndata(Galton)\nhead(Galton)\n```\n\nThis isn't as restrictive as it seems. We can convert the above signals: photos, videos, and text to a data table format!\n\n### Tidy Data\n\n**Example:** After a scandal among FIFA officials, fivethirtyeight.com posted an analysis of FIFA viewership, [\"How to Break FIFA\"](https://fivethirtyeight.com/features/how-to-break-fifa/). Here's a snapshot of the data used in this article:\n\n```{r echo=FALSE}\nsuppressPackageStartupMessages(library(fivethirtyeight))\ndata(\"fifa_audience\")\nsuppressPackageStartupMessages(library(knitr))\nkable(head(fifa_audience,10))\nfifa <- fifa_audience\n```\n\nThe data table above is in *tidy* format. *Tidy* data tables have three key features:\n\n1.  Each row represents a **unit of observation** (also referred to as a case).\\\n2.  Each column represents a **variable** (ie. an attribute of the cases that can vary from case to case). Each variable is one of two types:\\\n\n-   **quantitative** = numerical/numbers with units\\\n-   **categorical** = discrete possibilities/categories\\\n\n3.  Each entry contains a single data value; no analysis, summaries, footnotes, comments, etc., and only one value per cell\n\n![Tidy Data: Art by Allison Horst](../images/tidydata_1.jpg)\n\n```{name=\"Units of Observation and Variables\"}\nConsider the following in a group:   \n```\n\na.  What are the units of observation in the FIFA data?\\\nb.  What are the variables? Which are quantitative? Which are categorical?\\\nc.  Are these *tidy* data?\n\nSolution\n\na.  A FIFA member country\nb.  country name, soccer or football confederation, country's share of global population (percentage), country's share of global world cup TV Audience (percentage), country's GDP-weighted audience share (percentage)\nc.  Yes\n\n\\\n\n```{name=\"Tidy vs. Untidy\"}\nCheck out the following data.  Explain to each other why they are untidy and how we can tidy them.    \n  \n  a. Data 1: FIFA    \n    \n              country  confederation  population share    tv_share\n        ------------- -------------- ----------------- ----------- ------------------\n        United States       CONCACAF     i don't know*       4.3%  *look up later      \n                 Japan           AFC               1.9       4.9%\n                 China           AFC              19.5      14.8%    \n                                                        total=24%           \n  \n  b. Data 2: Gapminder life expectancies by country    \n        \n                          country  1952  1957  1962\n        ------------ ------------ ----- ----- -----\n                Asia  Afghanistan  28.8  30.3  32.0\n                          Bahrain  50.9  53.8  56.9    \n              Africa      Algeria  43.0  45.7  48.3    \n\n```\n\nSolution\n\na.  There are notes such as \"I don't know\" and \"look up later\" in columns with numeric values; the last row with the total is a summary. We could remove the text notes, replace it with the value if known, and remove the last row with the total summary.\nb.  The first column does not have a row name. It should be continent. Additionally, Bahrain needs a value for the continent.The column names '1952', '1957' and '1962' are values not variables. The table should be 'pivoted' (more information on this coming soon!), so that there is an additional column named 'year' and each country has three observations (rows) associated with it (one for each year).\n\n### Data Basics in RStudio\n\nFor now, we'll focus on *tidy* data. In a couple of weeks, you'll learn how to \"clean data\" and turn untidy data into tidy data.\n\n```{name=\"Importing Package Data\"}\nThe first step to working with data in RStudio is getting it in there!  How we do this depends on its format (eg: Excel spreadsheet, csv file, txt file) and storage locations (eg: online, within Wiki, desktop).  \n\nLuckily for us, the `fifa_audience` data are stored in the `fivethirtyeight` RStudio package. Copy and paste the following code into the Console and press Enter.\n```\n\n```{r eval=FALSE}\n#download the data and information in the fivethirtyeight package (we only need to do this once)\ninstall.packages('fivethirtyeight')\n\n#load the fivethirtyeight package\nlibrary(fivethirtyeight)\n    \n#load the fifa data\ndata(\"fifa_audience\")\n    \n#store this under a shorter, easier name\nfifa <- fifa_audience\n```\n\n```{name=\"Examining Data Structures\"}\nBefore we can analyze our data, we must understand its structure.  Try out the following functions (copy and paste into the Console).  For each, make a note that describes its action.  \n```\n\n```{r eval=FALSE}\n#(what does View do?)\nView(fifa)  \n\n#(what does head do?)\nhead(fifa)  \n\n#(what does dim do?)\ndim(fifa)           \n\n#(what does names do?)\nnames(fifa)         \n```\n\nSolution\n\n```{r collapse=TRUE}\n#View() opens up a new tab with a spreadsheet preview of the data to visually explore the data. It is commented out in the Rmarkdown/Quarto file because this is an interactive feature\n#View(fifa)  \n\n#head() gives the first 6 (default number) rows of a data set\nhead(fifa)  \n\n#dim() gives the number of rows and number of columns\ndim(fifa)           \n\n#names() gives the names of the columns/variables\nnames(fifa)   \n```\n\n```{name=\"Codebooks\"}\nData are also only useful if we know what they measure!  The `fifa` data table is *tidy*; it doesn't have any helpful notes in the data itself.\n```\n\nRather, information about the data is stored in a separate *codebook*. Codebooks can be stored in many ways (eg: Google docs, word docs, etc). Here the authors have made their codebook available in RStudio (under the original `fifa_audience` name). Check it out (run the following code in the console):\n\n```{r eval=FALSE}\n?fifa_audience\n```\n\na.  What does `population_share` measure?\nb.  What are the units of `population_share`?\n\nSolution\n\na.  Country's share of global population\nb.  Percentage between 0 and 100\n\n```{name=\"Examining a Single Variable\"}\nConsider the following:\n```\n\na.  We might want to access and focus on a single variable. To this end, we can use the `$` notation (see below). What are the values of `tv_audience_share`? Of `confederation`? Is it easy to figure out?\n\n```{r eval=FALSE}\nfifa$tv_audience_share\nfifa$confederation\n```\n\nSolution\n\na.  The values of `tv_audience_share` are numerical values between 0 and 7.1. By scanning through the long list, it looks like the values of `confederation` are words (a string of alphabetical characters): OFC, CAF, AFC, UEFA, CONCACAF, CONMEBOL.\n\nIt's important to understand the format/class of each variable (quantitative, categorical, date, etc) in both its meaning and its structure within RStudio:\n\n```{r eval=FALSE}\nclass(fifa$tv_audience_share)\nclass(fifa$confederation)\n```\n\nb.  If a variable is categorical (in `factor` format), we can determine its `levels` / category labels. What are the value of `confederation`?\n\n```{r eval=FALSE}\nlevels(fifa$confederation) #it is in character format\nlevels(factor(fifa$confederation)) #we can convert to factor format\n```\n\nSolution\n\nb.  The values of `confederation` are words, also known as strings of characters in computing languages (indicated by the quotes around them): \"AFC\", \"CAF\", \"CONCACAF\", \"CONMEBOL\", \"OFC\", \"UEFA\".\n\n## R Markdown/Quarto and Reproducible Research\n\n> **Reproducible research** is the idea that data analyses, and more generally, scientific claims, are published with their data and software code so that others may verify the findings and build upon them. - [Reproducible Research, Coursera](https://www.coursera.org/learn/reproducible-research)\n\nUseful Resources:\n\n1.  [R Markdown Quick Tour](http://rmarkdown.rstudio.com/authoring_quick_tour.html)\\\n2.  [R Markdown Cheatsheet](https://github.com/rstudio/cheatsheets/raw/main/rmarkdown-2.0.pdf)\n3.  [R Markdown Reference Guide](https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf)\n4.  [Quarto Get Started Guide](https://quarto.org/docs/get-started/hello/rstudio.html)\n\nResearch often makes claims that are difficult to verify. A recent [study of published psychology articles](http://science.sciencemag.org/content/349/6251/aac4716) found that less than half of published claims could be reproduced. One of the most common reasons claims cannot be reproduced is confusion about data analysis. It may be unclear exactly how data was prepared and analyzed, or there may be a mistake in the analysis.\n\nIn this course we will use an innovative format called R Markdown that dramatically increases the transparency of data analysis. R Markdown interleaves data, R code, graphs, tables, and text, packaging them into an easily publishable format. Quarto is the update version of R Markdown that allows you to incorporate code from many programming languages and is more general than RStudio. You can choose to work in either format.\n\nTo use R Markdown, you will write an R Markdown formatted file in RStudio and then ask RStudio to **knit** it into an HTML document (or occasionally a PDF or MS Word document). If you work in a Quarto document, you press the **render** button to turn it into an HTML document.\n\n```{name=\"Deduce the R Markdown Format\"}\nLook at this [Sample RMarkdown](http://www.statpower.net/Content/310/R%20Stuff/SampleMarkdown.Rmd) and the [HTML webpage](http://www.statpower.net/Content/310/R%20Stuff/SampleMarkdown.html) it creates. Consider the following and discuss:\n    \na) How are bullets, italics, and section headers represented in the R Markdown file?\nb) How does R code appear in the R Markdown file?\nc) In the HTML webpage, do you see the R code, the output of the R code, or both?\n```\n\nSolution\n\n``` {collapse=\"TRUE\"}\nBullets are represented with * and +\nItalics are represented with * before and after a word or phrase\nSection headers are represented with #\n\nR code chunks are between 3 tick marks at the beginning and end; it is R code if there is an r in curly braces\n  \nIf echo=FALSE in curly braces, the code is not shown. Otherwise, both code and output are shown by default.\n```\n\n\nNow take a look at the [R Markdown cheatsheet](https://github.com/rstudio/cheatsheets/raw/main/rmarkdown-2.0.pdf). Look up the R Markdown features from the previous question on the cheatsheet. There's a great deal more information there.\n\n## Practice\n\nComplete the following. If you get stuck along the way, refer to the R Markdown cheatsheet linked above, search the web for answers, and/or ask for help!\n\n```{name=\"Your First R Markdown File\"}\nCreate a new R Markdown (or a Quarto document) about your favorite food.    \n\na. Create a new file in RStudio (File -> New File -> R Markdown or Quarto Document) with a Title of `First_Markdown` [unclick the visual editor button]. Save it to a new folder on your Desktop called `COMP_STAT_112`; within that new folder, create another new folder called `Assignment_01`.  \nb. Make sure you can compile/render (Knit/Render) the Markdown/Quarto into a webpage (html file).  \nc. Add a new line between `title` and `output` that reads: `author: Your Name`.\nd. Delete everything from `## RMarkdown` or `## Quarto` and below. Create a new section by typing `## Favorite Food`.\ne. Write a very brief essay about your favorite food. Make sure to include:    \n  * A picture from the web    \n  * A bullet list    \n  * A numbered list  \nf. Compile (Knit/Render) the document into an html file [which appears in the folder `Assignment_01` you created] and make sure it looks like you want it to.\n```\n\n```{name=\"New Data!\"}\nThere's a data set named `comic_characters` in the `fivethirtyeightdata` package.\n```\n\nInstall the package by running the following in the console:\n\n```         \ninstall.packages('fivethirtyeightdata', repos = 'https://fivethirtyeightdata.github.io/drat/', type = 'source')\n```\n\nCheck out the codebook (hint: use ?) to understand what these data measure.\n\nAdd a second section to your RMarkdown file that you've created (with `##`), and then use code chunks and R commands to perform/answer the following tasks/questions:\n\na.  Load the `comic_characters` data.\\\nb.  What are the units of observation? How many observations are there?\\\nc.  In a new code chunk, print out the first 12 rows of the data set.\nd.  Get a list of all variable names.\\\ne.  What's the class of the `date` variable?\\\nf.  List all of the unique entries in the `gsm` variable (no need to include NA).\ng.  Compile the document into an html file.\n\n## Appendix: R Functions\n\n### R as a calculator\n\n| Function/Operator |      Action       |    Example |\n|-------------------|:-----------------:|-----------:|\n| `/`               |     Division      |    `90/30` |\n| `*`               |  Multiplication   |      `2*5` |\n| `+`               |     Addition      |      `1+1` |\n| `-`               |    Subtraction    |      `1-1` |\n| `^`               | Exponent/Power to |      `3^2` |\n| `sqrt(x)`         |    Square root    | `sqrt(25)` |\n\n### R Basics\n\n| Function/Operator                 |                                    Action                                    |                                       Example |\n|------------------|:--------------------------------:|--------------------:|\n| `install.packages('packagename')` |         Download a R package (function, data, etc.) from repository          |         `install.packages('fivethirtyeight')` |\n| `library(packagename)`            |                        Access a downloaded R package                         |                    `library(fivethirtyeight)` |\n| `?function_object_name`           |           Opens the help/documentation for the function or object            |                                        `?seq` |\n| `rep(x, times, each)`             |                             Repeat x a \\# times                              |                                    `rep(5,8)` |\n| `seq(from, to, by)`               |                             Sequence generation                              |                          `seq(0, 12, by = 2)` |\n| `name <- value_output`            |                       Assign value or output to a name                       |                            `squared_3 <- 3^2` |\n| `View(x)`                         |                      Open spreadsheet viewer of dataset                      |                         `View(fifa_audience)` |\n| `head(x)`                         |                     Print the first 6 rows of a dataset                      |                         `head(fifa_audience)` |\n| `dim(x)`                          |        Print the dimensions (number of rows and columns) of a dataset        |                          `dim(fifa_audience)` |\n| `names(x)`                        |                Print the names of the variables in a dataset                 |                        `names(fifa_audience)` |\n| `$`                               |         Used to access one variable in a data set based on its name          |                 `fifa_audience$confederation` |\n| `class(x)`                        |                   Print the class types argument or input                    |          `class(fifa_audience$confederation)` |\n| `factor(x)`                       | Converts the argument or input to a factor class type (categorical variable) |         `factor(fifa_audience$confederation)` |\n| `levels(x)`                       |                   Prints the unique categories of a factor                   | `levels(factor(fifa_audience$confederation))` |\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles/styles.css"],"toc":true,"output-file":"01-RStudio_Intro.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","code-copy":true,"theme":"cosmo","title":"Intro to R, RStudio, and R Markdown"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":true,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"01-RStudio_Intro.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"block-headings":true,"documentclass":"scrreprt","title":"Intro to R, RStudio, and R Markdown"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}