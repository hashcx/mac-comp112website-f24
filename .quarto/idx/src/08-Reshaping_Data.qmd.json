{"title":"Reshaping Data","markdown":{"headingText":"Reshaping Data","containsRefs":false,"markdown":"```{r 08_setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, error = TRUE, tidy = FALSE, message = FALSE, cache.extra = packageVersion(\"tufte\"))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(ggmap)\nlibrary(fivethirtyeight)\nlibrary(babynames)\n```\n\n\n## Learning Goals {-}\n\n- Understand the difference between wide and long data format and distinguish the case (unit of observation) for a given data set\n- Develop comfort in using `pivot_wider` and `pivot_longer` in the `tidyr` package\n\nYou can download a template .Rmd of this activity [here](template_rmd/08-Reshaping_Data_Assign.Rmd). Put the file in the existing folder `Assignment_06` in your `COMP_STAT_112` folder.\n\n\n## Wide and Long Data Formats {-}\n\nAdditional reading: \n\n* [Wickham and Grolemund on pivoting](https://r4ds.had.co.nz/tidy-data.html#pivoting), or \n* [Baumer, Kaplan, and Horton on reshaping data](https://mdsr-book.github.io/mdsr2e/ch-dataII.html#reshaping-data)\n\nAs we are transforming data, it is important to keep in mind what constitutes each case (row) of the data. For example, in the initial `babynames` data below, each case is a single name-sex-year combination. So if we have the same name and sex assigned at birth but a different year, that would be a different case.\n\n```{r, echo=FALSE}\nknitr::kable(\n  babynames[1:6, ],\n  caption = \"Each case is one name-sex-year combination.\"\n)\n```\n\nIt is often necessary to rearrange your data in order to create visualizations, run statistical analysis, etc. We have already seen some ways to rearrange the data to change the unit of observation (also known as the case). For example, what is the case after performing the following command?\n\n```{r}\nbabynamesTotal <- babynames %>%\n  group_by(name, sex) %>%\n  summarise(total = sum(n))\n```\n\nEach case now represents one name-sex combination:\n\n```{r, echo=FALSE}\nknitr::kable(\n  babynamesTotal[1:6, ],\n  caption = \"Long format where each case is one name-sex combination.\"\n)\n```\n\nIn this activity, we are going to learn two new operations to reshape and reorganize the data: `pivot_wider()` and `pivot_longer()`.\n\n### Wider {-}\n\n```{example}\nWe want to find the common names that are the most gender neutral (used roughly equally for males and females). How should we rearrange the data? \n```\n\nWell, one nice way would be to have a single row for each name, and then have separate variables for the number of times that name is used for males and females. Using these two columns, we can then compute a third column that gives the ratio between these two columns. That is, we'd like to transform the data into a **wide format** with each of the possible values of the `sex` variable becoming its own column. The operation we need to perform this transformation is **`pivot_wider()`**. \n\nThe inputs for this function are:\n\n- `names_from` (the original variable `sex` in this case) that identifies the variable in the initial long format data whose values should become the names of the new variables in the wide format data. \n- `names_sort = TRUE` dictates that the variables are listed in alphabetical order; when it is FALSE, they are listed in order of first appearance.\n-  `values_from`  (`total` in this case) representing the variable to be divided into multiple new variables, \n- `values_fill = 0` specifies that if there are, e.g., no females named Aadam, we should include a zero in the corresponding entry of the wide format table\n\n```{r echo=FALSE,fig.cap=\"Illustration of pivot_wider from tidyr cheatsheet.\" ,fig.alt=\"Illustration of pivot_wider in which values in a column get spread out over multiple columns (from tidyr cheatsheet).\"}\nknitr::include_graphics(\"images/pivot_wider.png\")\n```\n\n\n```{r}\nBabyWide <- babynamesTotal %>%\n  pivot_wider(names_from = sex, values_from = total, values_fill = 0, names_sort = TRUE)\n```\n\n```{r, echo=FALSE}\nknitr::kable(\n  BabyWide[1:6, ],\n  caption = \"A wide format with one case per name enables us to examine gender balance.\"\n)\n```\n\nNow we can choose common names with frequency greater than 25,000 for both males and females, and sort by the ratio to identify gender-neutral names.\n\n```{r}\nNeutral <- BabyWide %>%\n  filter(M > 25000, F > 25000) %>%\n  mutate(ratio = pmin(M / F, F / M)) %>% #pmin() stands for parallel min, finds the min(M/F, F/M) within each row\n  arrange(desc(ratio))\n```\n\n```{r, echo=FALSE}\nknitr::kable(\n  Neutral[1:12, ],\n  caption = \"The most gender-neutral common names, in wide format.\"\n)\n```\n\n### Longer {-}\n\nNext, let's filter these names to keep only those with a ratio of 0.5 or greater (no more than 2 to 1), and then switch back to long format. We can do this with the following **`pivot_longer()`** operation. It gathers the columns listed c(`F`,`M`) under the `cols` argument into a single column whose name is given by the `names_to` argument (\"sex\"), and includes the values in a column called `total`, which is the input to the `values_to` argument.\n\n```{r echo=FALSE,fig.cap=\"Illustration of pivot_longer from tidyr cheatsheet.\",fig.alt=\"Illustration of pivot_longer in which values in a row get stack on top of each other in a column (from tidyr cheatsheet).\"}\nknitr::include_graphics(\"images/pivot_longer.png\")\n```\n\n```{r}\nNeutralLong <- Neutral %>%\n  filter(ratio >= .5) %>%\n  pivot_longer(cols = c(`F`, `M`), names_to = \"sex\", values_to = \"total\") %>%\n  select(name, sex, total) %>%\n  arrange(name)\n```\n\n```{r, echo=FALSE}\nknitr::kable(\n  NeutralLong[, ],\n  caption = \"Long format for the most gender-neutral common names.\"\n)\n```\n\n\n## Example: The Daily Show Guests {-}\n\nThe data associated with [this article](https://fivethirtyeight.com/datalab/every-guest-jon-stewart-ever-had-on-the-daily-show/) is available in the `fivethirtyeight` package, and is loaded into `Daily` below. It includes a list of every guest to ever appear on Jon Stewart's The Daily Show. Note that when multiple people appeared together, each person receives their own line.\n\n```{r}\nDaily <- daily_show_guests\n```\n\n```{r, echo=FALSE}\nknitr::kable(\n  Daily[132:142, ]\n)\n```\n\n### Practice: Popular guests {-}\n\n```{exercise}\nCreate the following table containing 19 columns. The first column should have the ten guests with the highest number of total apperances on the show, listed in descending order of number of appearances. The next 17 columns should show the number of appearances of the corresponding guest in each year from 1999 to 2015 (one per column). The final column should show the total number of appearances for the corresponding guest over the entire duration of the show (these entries should be in decreasing order). Hint: the function `rowSums()` adds up all of the entries in each row of a table. Try using it in a `mutate()`.\n\n```\n\n### Practice: Recreating a graphic {-}\n\nThe original data has 18 different entries for the `group` variable:\n\n```{r}\nunique(Daily$group)\n```\n\nIn order to help you recreate the first figure from [the article](https://fivethirtyeight.com/datalab/every-guest-jon-stewart-ever-had-on-the-daily-show/), I have added a new variable with three broader groups: (i) entertainment; (ii) politics, business, and government, and (iii) commentators. The data is available [here](data/daily-group-assignment.csv). We will learn in the next activity what the `inner_join` in this code chunk is doing.\n\n\n```{r eval = FALSE,echo=TRUE}\nDailyGroups <- read_csv(\"https://bcheggeseth.github.io/112_spring_2023/data/daily-group-assignment.csv\")\nDaily <- Daily %>%\n  inner_join(DailyGroups, by = c(\"group\" = \"group\"))\n```\n\n```{r eval = TRUE,echo=FALSE}\nDailyGroups <- read_csv(\"data/daily-group-assignment.csv\")\nDaily <- Daily %>%\n  inner_join(DailyGroups, by = c(\"group\" = \"group\"))\n```\n\n```{r,echo=FALSE}\nknitr::kable(\n  Daily[1:6, ]\n)\n```\n\n```{exercise}\nUsing the group assignments contained in the `broad_group` variable, recreate the graphic from the article, with three different lines showing the fraction of guests in each group over time. Hint: first think about what your case should be for the glyph-ready form.\n\n```\n\n\n## More Practice: Pivoting Longer {-}\n\nA typical situation that requires a `pivot_longer` command is when the columns represent the possible values of a variable. Table \\@ref(tab:lesotho-table) shows example data set from [opendataforafrica.org](http://dataportal.opendataforafrica.org/) with different years in different columns. You can find the data [here](data/Lesotho.csv).\n\n```{r, warning=FALSE,message=FALSE,eval=FALSE,echo=TRUE}\nLesotho <- read_csv(\"https://bcheggeseth.github.io/112_spring_2023/data/Lesotho.csv\")\n```\n\n```{r, warning=FALSE,message=FALSE,eval=TRUE,echo=FALSE}\nLesotho <- read_csv(\"data/Lesotho.csv\")\n```\n\n```{r lesotho-table, echo=FALSE}\nknitr::kable(\n  Lesotho[, ],\n  digits = 2, caption = \"Financial statistics about Lesotho.\"\n)\n```\n\n\n```{exercise,name=\"Practice pivoting longer\"}\nMake a side-by-side bar chart with the `year` on the horizontal axis, and three side-by-side vertical columns for average interest rate on deposits, average interest rate on loans, and inflation rate for each year. In order to get the data into glyph-ready form, you'll need to use `pivot_longer`. Hint: `pivot_longer` uses the `dplyr::select()` notation, so you can, e.g., list the columns you want to select, use colon notation, or use `starts_with(a string)`. See [Wickham and Grolemund](https://r4ds.had.co.nz/transform.html#select) for more information.\n\n```\n\n\n\n## Appendix: R Functions {.unnumbered}\n\n### Reshaping Functions {.unnumbered}\n\n| Function/Operator |                 Action                 |                       Example |\n|-------------------------|:---------------------------:|------------------:|\n| `pivot_wider()`        |   Takes a long data set and spreads information in columns into many new variables (wider)  |   `babynamesTotal %>% pivot_wider(names_from = sex, values_from = total, values_fill = 0, names_sort = TRUE)` |\n| `pivot_longer()`        | Takes a wide data set and gathers information in columns into fewer variables (longer) |   ` Neutral %>% pivot_longer(cols = c(`F`, `M`), names_to = \"sex\", values_to = \"total\")` |\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../sty/styles.css"],"toc":true,"output-file":"08-Reshaping_Data.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","code-copy":true,"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}